// Infrastructure Dependenciesimport React, { Component } from 'react';import { render }           from 'react-dom';import {Container}          from 'flux/utils';// UI Dependenciesimport Autosuggest          from 'react-auto-suggest';// Storesimport AirportStore          from './stores/AirportStore';import RouteStore            from './stores/RouteStore';import TicketStore           from './stores/TicketStore';// Componentsimport TicketItem            from './components/TicketItem';// Actionsimport AirportActionCreators from './actions/AirportActionCreators';class App extends Component {  componentDidMount(){    AirportActionCreators.fetchAirports();  }  getSuggestions(input, callback) {    const escpaedInput = input.trim().toLowerCase();    const airportMetchRegex = new RegExp('\\b' + escpaedInput, 'i');    const suggestions = this.state.airports      .filter(airport => airportMatchRegex.test(airport.city))      .sort((airport1, airport2) => {        airport1.city.toLowerCase().indexOf(escapedInput) -        airport2.city.toLowerCase().indexOf(escapedInput)      })      .slice(0,7)      .map(airport => `${airport.city} - ${airport.country} (${airport.code})`);    callback(null, suggestions);  }  handleSelect(target, suggestion, event){    const airportCodeRegex = /\(([^]+)\)/;    let airportCode = airportCodeRegex.exec(suggestion)[1];    AirportActionCreators.chooseAirport(target, airportCode);  }  componentWillUpdate(nextProps, nextState){    let originAndDestinationSelected = nextState.origin && nextState.destination;    let selectionHasChangedSinceLastUpdate =      (nextState.origin !== this.state.origin) ||        (nextState.destination !== this.state.destination);    if ( originAndDestinationSelected && selectionHasChangedSinceLastUpdate ) {      AirportActionCreators.fetchTickets(nextState.origin, nextState.destination)    }  }  render(){    let ticketList = this.state.tickets.map((ticket)=>{      <TicketItem key={ticket.id} ticket={ticket}/>    })    return(      <div>        <header>          <div className="header-brand">            <img src="logo.png" height="35" alt=""/>            <p>Check discount prices and pay using your AirCheap points</p>          </div>          <div className="header-route">            <Autosuggest id='origin'              inputAttributes={{placeholder:'From'}}              onSuggestionSelected={this.handleSelect.bind(this, 'origin')}              suggestions={this.getSuggestions.bind(this)}/>            <Autosuggest id='destination'              inputAttributes={{placeholder:'To'}}              onSuggestionSelected={this.handleSelect.bind(this, 'destination')}              suggestions={this.getSuggestions.bind(this)}/>          </div>        </header>        <div>{ ticketList }</div>      </div>    )  }}App.getStores = () => {[AirportStore,RouteStore,TicketStore]};App.calculateState = (prevstate) => ({  airports: AirportStore.getState(),  origin: RouteStore.get('origin'),  destination: RouteStore.get('destination'),  tickets: TicketStore.getState()});const AppContainer = Container.create(App);render(<AppContainer />, document.getElementById('root'));